import 'package:flutter/material.dart';
import '../widgets/emoji_demo.dart';
import '../widgets/apple_emoji_demo.dart';
import '../widgets/emoji_performance_monitor.dart';
import '../utils/emoji_utils.dart';

/// –¢–µ—Å—Ç–æ–≤—ã–π —ç–∫—Ä–∞–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ iOS-—ç–º–æ–¥–∑–∏
class EmojiTestScreen extends StatelessWidget {
  const EmojiTestScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      appBar: AppBar(
        backgroundColor: Colors.black,
        title: const Text(
          '–¢–µ—Å—Ç iOS –≠–º–æ–¥–∑–∏',
          style: TextStyle(
            color: Colors.white,
            fontFamily: 'Inter',
            fontWeight: FontWeight.w600,
          ),
        ),
        iconTheme: const IconThemeData(color: Colors.white),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä iOS-—ç–º–æ–¥–∑–∏! üéâ',
              style: TextStyle(
                color: Colors.white,
                fontSize: 18,
                fontWeight: FontWeight.w600,
                fontFamily: 'Inter',
              ),
            ),
            const SizedBox(height: 16),
            Text(
              '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç–º–æ–¥–∑–∏ –≤ –≤–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:',
              style: TextStyle(
                color: Colors.grey.shade400,
                fontSize: 14,
                fontFamily: 'Inter',
              ),
            ),
            const SizedBox(height: 24),

            // –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            _buildExampleCard(
              '–ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ',
              'üòä ‚ù§Ô∏è üëç üî• üöÄ ‚≠ê',
            ),

            const SizedBox(height: 16),

            _buildExampleCard(
              '–í —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–π',
              '–ü—Ä–∏–≤–µ—Ç! üòä –ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞? üëç',
            ),

            const SizedBox(height: 16),

            _buildExampleCard(
              '–í –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ',
              '‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ  ‚Ä¢  ‚≠ê –û—Ü–µ–Ω–∫–∞  ‚Ä¢  üî• –ü–æ–ø—É–ª—è—Ä–Ω–æ–µ',
            ),

            const SizedBox(height: 16),

            // –ö–Ω–æ–ø–∫–∞ –¥–ª—è Apple —ç–º–æ–¥–∑–∏ –¥–µ–º–æ
            SizedBox(
              width: double.infinity,
              child: ElevatedButton(
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const AppleEmojiDemo(),
                    ),
                  );
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.blue,
                  padding: const EdgeInsets.symmetric(vertical: 16),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                ),
                child: const Text(
                  'üçé Apple –≠–º–æ–¥–∑–∏ –î–µ–º–æ',
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 16,
                    fontWeight: FontWeight.w600,
                    fontFamily: 'Inter',
                  ),
                ),
              ),
            ),

            const SizedBox(height: 16),

            // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –¥–µ–º–æ
            SizedBox(
              width: double.infinity,
              child: ElevatedButton(
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const EmojiDemo(),
                    ),
                  );
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.blue,
                  padding: const EdgeInsets.symmetric(vertical: 16),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                ),
                child: const Text(
                  'üìö –ü–æ–¥—Ä–æ–±–Ω–æ–µ –¥–µ–º–æ',
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 16,
                    fontWeight: FontWeight.w600,
                    fontFamily: 'Inter',
                  ),
                ),
              ),
            ),

            const SizedBox(height: 16),

            // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            SizedBox(
              width: double.infinity,
              child: ElevatedButton(
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const EmojiPerformanceMonitor(),
                    ),
                  );
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.purple,
                  padding: const EdgeInsets.symmetric(vertical: 16),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                ),
                child: const Text(
                  'üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç–º–æ–¥–∑–∏',
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 16,
                    fontWeight: FontWeight.w600,
                    fontFamily: 'Inter',
                  ),
                ),
              ),
            ),

            const SizedBox(height: 16),

            // –°–æ–≤–µ—Ç—ã
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.grey.shade900,
                borderRadius: BorderRadius.circular(12),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:',
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 16,
                      fontWeight: FontWeight.w600,
                      fontFamily: 'Inter',
                    ),
                  ),
                  const SizedBox(height: 8),
                  _buildTip('‚Ä¢ –≠–º–æ–¥–∑–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–¥–∞–ø—Ç–∏—Ä—É—é—Ç—Å—è –ø–æ–¥ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É'),
                  _buildTip('‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Unicode –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏'),
                  _buildTip('‚Ä¢ EmojiUtils –ø–æ–º–æ–≥–∞–µ—Ç —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º'),
                  _buildTip('‚Ä¢ EmojiPicker –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞'),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildExampleCard(String title, String content) {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey.shade900,
        borderRadius: BorderRadius.circular(12),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: TextStyle(
              color: Colors.white,
              fontSize: 14,
              fontWeight: FontWeight.w600,
              fontFamily: 'Inter',
            ),
          ),
          const SizedBox(height: 8),
          RichText(
            text: TextSpan(
              children: _buildTextSpansWithEmoji(content),
              style: TextStyle(
                color: Colors.grey.shade300,
                fontSize: 16,
                fontFamily: 'Inter',
              ),
            ),
          ),
        ],
      ),
    );
  }

  /// –°–æ–∑–¥–∞–µ—Ç TextSpan'—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —à—Ä–∏—Ñ—Ç–∞–º–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∏ —ç–º–æ–¥–∑–∏
  List<TextSpan> _buildTextSpansWithEmoji(String text) {
    final List<TextSpan> spans = [];
    final emojiRegex = RegExp(r'[\u{1F600}-\u{1F64F}]|[\u{1F300}-\u{1F5FF}]|[\u{1F680}-\u{1F6FF}]|[\u{1F1E0}-\u{1F1FF}]|[\u{2600}-\u{26FF}]|[\u{2700}-\u{27BF}]', unicode: true);
    
    int lastIndex = 0;
    for (final match in emojiRegex.allMatches(text)) {
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–æ —ç–º–æ–¥–∑–∏
      if (match.start > lastIndex) {
        spans.add(TextSpan(
          text: text.substring(lastIndex, match.start),
          style: const TextStyle(fontFamily: 'Inter'),
        ));
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ —Å Apple —à—Ä–∏—Ñ—Ç–æ–º
      spans.add(TextSpan(
        text: match.group(0),
        style: EmojiUtils.getEmojiTextStyle(fontSize: 16),
      ));
      
      lastIndex = match.end;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–π—Å—è —Ç–µ–∫—Å—Ç
    if (lastIndex < text.length) {
      spans.add(TextSpan(
        text: text.substring(lastIndex),
        style: const TextStyle(fontFamily: 'Inter'),
      ));
    }
    
    return spans;
  }

  Widget _buildTip(String text) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 4),
      child: Text(
        text,
        style: TextStyle(
          color: Colors.grey.shade400,
          fontSize: 14,
          fontFamily: 'Inter',
        ),
      ),
    );
  }
}
