import 'package:flutter/material.dart';
import '../utils/emoji_utils.dart';
import '../services/emoji_loader_service.dart';

/// –í–∏–¥–∂–µ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —ç–º–æ–¥–∑–∏ –∑–∞–≥—Ä—É–∑–∫–∏
class EmojiPerformanceMonitor extends StatefulWidget {
  const EmojiPerformanceMonitor({super.key});

  @override
  State<EmojiPerformanceMonitor> createState() => _EmojiPerformanceMonitorState();
}

class _EmojiPerformanceMonitorState extends State<EmojiPerformanceMonitor> {
  Map<String, int> _cacheInfo = {};
  Map<String, dynamic> _fontStatus = {};

  @override
  void initState() {
    super.initState();
    _updateStats();
  }

  void _updateStats() {
    setState(() {
      _cacheInfo = EmojiUtils.getCacheInfo();
      _fontStatus = EmojiLoaderService.getStatus();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      appBar: AppBar(
        backgroundColor: Colors.black,
        title: const Text(
          'üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≠–º–æ–¥–∑–∏',
          style: TextStyle(
            color: Colors.white,
            fontFamily: 'Inter',
            fontWeight: FontWeight.w600,
          ),
        ),
        iconTheme: const IconThemeData(color: Colors.white),
        actions: [
          IconButton(
            icon: const Icon(Icons.refresh),
            onPressed: _updateStats,
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—ç—à–µ —ç–º–æ–¥–∑–∏
            _buildInfoCard(
              '–ö—ç—à —ç–º–æ–¥–∑–∏',
              [
                '–†–∞–∑–º–µ—Ä –∫—ç—à–∞ —ç–º–æ–¥–∑–∏: ${_cacheInfo['emoji_cache_size'] ?? 0}',
                '–†–∞–∑–º–µ—Ä –∫—ç—à–∞ —Å—Ç–∏–ª–µ–π: ${_cacheInfo['style_cache_size'] ?? 0}',
              ],
              Colors.blue,
            ),
            
            const SizedBox(height: 16),
            
            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à—Ä–∏—Ñ—Ç–µ
            _buildInfoCard(
              '–ö–∞—Å—Ç–æ–º–Ω—ã–π Emoji —à—Ä–∏—Ñ—Ç',
              [
                '–°—Ç–∞—Ç—É—Å: ${_fontStatus['isLoaded'] == true ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' : '‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω'}',
                '–†–∞–∑–º–µ—Ä: ${_fontStatus['fontSizeKB'] ?? '0'} KB',
                '–ö—ç—à: ${_fontStatus['cacheStatus'] ?? 'unknown'}',
              ],
              Colors.green,
            ),
            
            const SizedBox(height: 16),
            
            // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            _buildActionCard(),
            
            const SizedBox(height: 16),
            
            // –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            _buildPerformanceTest(),
          ],
        ),
      ),
    );
  }

  Widget _buildInfoCard(String title, List<String> info, Color color) {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey.shade900,
        borderRadius: BorderRadius.circular(12),
        border: Border.all(color: color.withOpacity(0.3)),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: TextStyle(
              color: color,
              fontSize: 16,
              fontWeight: FontWeight.w600,
              fontFamily: 'Inter',
            ),
          ),
          const SizedBox(height: 12),
          ...info.map((item) => Padding(
            padding: const EdgeInsets.only(bottom: 4),
            child: Text(
              item,
              style: TextStyle(
                color: Colors.grey.shade300,
                fontSize: 14,
                fontFamily: 'Inter',
              ),
            ),
          )),
        ],
      ),
    );
  }

  Widget _buildActionCard() {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey.shade900,
        borderRadius: BorderRadius.circular(12),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'üõ†Ô∏è –î–µ–π—Å—Ç–≤–∏—è',
            style: TextStyle(
              color: Colors.orange,
              fontSize: 16,
              fontWeight: FontWeight.w600,
              fontFamily: 'Inter',
            ),
          ),
          const SizedBox(height: 12),
          Row(
            children: [
              Expanded(
                child: ElevatedButton(
                  onPressed: () {
                    EmojiUtils.clearCache();
                    _updateStats();
                    ScaffoldMessenger.of(context).showSnackBar(
                      const SnackBar(content: Text('–ö—ç—à –æ—á–∏—â–µ–Ω')),
                    );
                  },
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.red,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(8),
                    ),
                  ),
                  child: const Text(
                    '–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à',
                    style: TextStyle(color: Colors.white),
                  ),
                ),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: ElevatedButton(
                  onPressed: () {
                    EmojiUtils.preloadEmojis();
                    _updateStats();
                    ScaffoldMessenger.of(context).showSnackBar(
                      const SnackBar(content: Text('–ö—ç—à –æ–±–Ω–æ–≤–ª–µ–Ω')),
                    );
                  },
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.green,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(8),
                    ),
                  ),
                  child: const Text(
                    '–û–±–Ω–æ–≤–∏—Ç—å –∫—ç—à',
                    style: TextStyle(color: Colors.white),
                  ),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildPerformanceTest() {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey.shade900,
        borderRadius: BorderRadius.circular(12),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            '‚ö° –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            style: TextStyle(
              color: Colors.yellow,
              fontSize: 16,
              fontWeight: FontWeight.w600,
              fontFamily: 'Inter',
            ),
          ),
          const SizedBox(height: 12),
          Text(
            '–ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —ç–º–æ–¥–∑–∏:',
            style: TextStyle(
              color: Colors.grey.shade300,
              fontSize: 14,
              fontFamily: 'Inter',
            ),
          ),
          const SizedBox(height: 8),
          Wrap(
            spacing: 8,
            runSpacing: 8,
            children: [
              'smile', 'heart', 'fire', 'star', 'rocket', 'check'
            ].map((type) => Container(
              padding: const EdgeInsets.all(8),
              decoration: BoxDecoration(
                color: Colors.grey.shade800,
                borderRadius: BorderRadius.circular(8),
              ),
              child: Text(
                EmojiUtils.getCommonEmoji(type),
                style: EmojiUtils.getEmojiTextStyle(fontSize: 20),
              ),
            )).toList(),
          ),
        ],
      ),
    );
  }
}
