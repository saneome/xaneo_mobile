import 'package:flutter/material.dart';

/// ะฃัะธะปะธัั ะดะปั ัะฐะฑะพัั ั Apple ัะผะพะดะทะธ ััะธััะพะผ
class AppleEmojiUtils {
  /// ะะพะทะฒัะฐัะฐะตั TextStyle ะดะปั Apple ัะผะพะดะทะธ
  static TextStyle getAppleEmojiStyle({
    double? fontSize,
    Color? color,
    FontWeight? fontWeight,
    TextStyle? baseStyle,
  }) {
    final style = baseStyle ?? const TextStyle();
    
    return style.copyWith(
      fontFamily: 'AppleEmojis',
      fontFamilyFallback: const [
        'Apple Color Emoji',
        'Segoe UI Emoji',
        'Noto Color Emoji',
        'Twemoji Mozilla',
        'Android Emoji',
        'EmojiOne Color',
      ],
      fontSize: fontSize ?? (style.fontSize ?? 14) * 1.1,
      color: color ?? style.color,
      fontWeight: fontWeight ?? style.fontWeight,
    );
  }

  /// ะัะพะฒะตััะตั, ัะฒะปัะตััั ะปะธ ัะธะผะฒะพะป ัะผะพะดะทะธ ะฟะพ Unicode ะดะธะฐะฟะฐะทะพะฝะฐะผ
  static bool isEmoji(int codePoint) {
    return (codePoint >= 0x1F600 && codePoint <= 0x1F64F) ||  // ัะผะพัะธะธ
           (codePoint >= 0x1F300 && codePoint <= 0x1F5FF) ||  // ัะธะผะฒะพะปั ะธ ะฟะธะบัะพะณัะฐะผะผั
           (codePoint >= 0x1F680 && codePoint <= 0x1F6FF) ||  // ััะฐะฝัะฟะพัั
           (codePoint >= 0x1F700 && codePoint <= 0x1F77F) ||  // ะฐะปัะธะผะธัะตัะบะธะต ัะธะผะฒะพะปั
           (codePoint >= 0x1F780 && codePoint <= 0x1F7FF) ||  // ะณะตะพะผะตััะธัะตัะบะธะต ัะธะณััั
           (codePoint >= 0x1F800 && codePoint <= 0x1F8FF) ||  // ะดะพะฟะพะปะฝะธัะตะปัะฝัะต ัััะตะปะบะธ
           (codePoint >= 0x1F900 && codePoint <= 0x1F9FF) ||  // ะดะพะฟะพะปะฝะธัะตะปัะฝัะต ัะธะผะฒะพะปั
           (codePoint >= 0x1FA00 && codePoint <= 0x1FA6F) ||  // ัะฐัะผะฐัั
           (codePoint >= 0x1FA70 && codePoint <= 0x1FAFF) ||  // ัะฐััะธัะตะฝะฝัะต ัะธะผะฒะพะปั
           (codePoint >= 0x2600 && codePoint <= 0x26FF) ||    // ัะฐะทะฝัะต ัะธะผะฒะพะปั
           (codePoint >= 0x2700 && codePoint <= 0x27BF) ||    // ะดะธะฝะณะฑะฐัั
           (codePoint >= 0x1F1E6 && codePoint <= 0x1F1FF) ||  // ัะตะณะธะพะฝะฐะปัะฝัะต ะธะฝะดะธะบะฐัะพัั
           (codePoint >= 0x1F3FB && codePoint <= 0x1F3FF) ||  // ะผะพะดะธัะธะบะฐัะพัั ัะพะฝะฐ ะบะพะถะธ
           (codePoint == 0x200D) ||                           // Zero Width Joiner
           (codePoint == 0xFE0F) ||                           // Variation Selector-16
           (codePoint == 0x20E3) ||                           // Combining Enclosing Keycap
           // ะกััะตะปะบะธ ะดะปั ะฝะฐะฟัะฐะฒะปะตะฝะฝัั ัะผะพะดะทะธ
           (codePoint == 0x2194) ||                           // โ Left Right Arrow
           (codePoint == 0x2195) ||                           // โ Up Down Arrow
           (codePoint == 0x2196) ||                           // โ North West Arrow
           (codePoint == 0x2197) ||                           // โ North East Arrow  
           (codePoint == 0x2198) ||                           // โ South East Arrow
           (codePoint == 0x2199) ||                           // โ South West Arrow
           (codePoint == 0x21A9) ||                           // โฉ Leftwards Arrow with Hook
           (codePoint == 0x21AA);                             // โช Rightwards Arrow with Hook
  }

  /// ะัะพะฒะตััะตั, ัะพะดะตัะถะธั ะปะธ ัััะพะบะฐ ZWJ ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััั
  static bool isZwjSequence(String text) {
    return text.contains('\u200D'); // Zero Width Joiner
  }

  /// ะกะฟะธัะพะบ ZWJ ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััะตะน, ะบะพัะพััะต ะผะพะณัั ะฝะต ะฟะพะดะดะตัะถะธะฒะฐัััั ะฒ Apple ััะธััะต
  static const Set<String> problematicZwjEmojis = {
    '๐โโ๏ธ',  // ะบะธะฒะฐััะตะต ะปะธัะพ ะฒะปะตะฒะพ-ะฒะฟัะฐะฒะพ
    '๐โโ๏ธ',  // ะบะธะฒะฐััะตะต ะปะธัะพ ะฒะฒะตัั-ะฒะฝะธะท
    '๐ตโ๐ซ',  // ะปะธัะพ ั ะบัะตััะธะบะฐะผะธ ะฒ ะณะปะฐะทะฐั
    '๐ฎโ๐จ',  // ะฒัะดััะฐััะตะต ะปะธัะพ
    '๐ซจ',    // ะฒัััััะธะฒะฐััะตะต ะปะธัะพ (ะตัะปะธ ะฝะต ะฟะพะดะดะตัะถะธะฒะฐะตััั)
    '๐งโ๐งโ๐ง', // ะฒะทัะพัะปัะน ั ะดะตััะผะธ
    '๐งโ๐ง',   // ะฒะทัะพัะปัะน ั ัะตะฑัะฝะบะพะผ
    '๐งโ๐งโ๐งโ๐ง', // ัะตะผัั ัะพ ะฒะทัะพัะปัะผะธ ะธ ะดะตััะผะธ
    '๐งโ๐งโ๐ง', // ัะตะผัั ัะพ ะฒะทัะพัะปัะผะธ ะธ ัะตะฑัะฝะบะพะผ
  };

  /// ะะพะทะฒัะฐัะฐะตั fallback ััะธะปั ะดะปั ะฟัะพะฑะปะตะผะฝัั ZWJ ัะผะพะดะทะธ
  static TextStyle getFallbackEmojiStyle({
    double? fontSize,
    Color? color,
    FontWeight? fontWeight,
    TextStyle? baseStyle,
  }) {
    final style = baseStyle ?? const TextStyle();
    
    return style.copyWith(
      // ะัะฟะพะปัะทัะตะผ ัะธััะตะผะฝัะต ััะธััั ะดะปั fallback
      fontFamily: null, // ะัะฟะพะปัะทัะตะผ ัะธััะตะผะฝัะน ััะธัั
      fontFamilyFallback: const [
        'Segoe UI Emoji',
        'Noto Color Emoji',
        'Apple Color Emoji', // Apple ะบะฐะบ fallback
        'Twemoji Mozilla',
        'Android Emoji',
        'EmojiOne Color',
      ],
      fontSize: fontSize ?? (style.fontSize ?? 14) * 1.0, // ะะต ัะฒะตะปะธัะธะฒะฐะตะผ ะดะปั fallback
      color: color ?? style.color,
      fontWeight: fontWeight ?? style.fontWeight,
    );
  }

  /// ะะพะทะฒัะฐัะฐะตั TextStyle ะดะปั Apple ัะผะพะดะทะธ ั fallback ะปะพะณะธะบะพะน
  static TextStyle getEmojiStyleWithFallback({
    required String emoji,
    double? fontSize,
    Color? color,
    FontWeight? fontWeight,
    TextStyle? baseStyle,
  }) {
    // ะัะปะธ ััะพ ะฟัะพะฑะปะตะผะฝะฐั ZWJ ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััั - ะธัะฟะพะปัะทัะตะผ fallback
    if (problematicZwjEmojis.contains(emoji) || 
        (isZwjSequence(emoji) && _isLikelyUnsupported(emoji))) {
      return getFallbackEmojiStyle(
        fontSize: fontSize,
        color: color,
        fontWeight: fontWeight,
        baseStyle: baseStyle,
      );
    }
    
    // ะะฝะฐัะต ะธัะฟะพะปัะทัะตะผ Apple ััะธัั
    return getAppleEmojiStyle(
      fontSize: fontSize,
      color: color,
      fontWeight: fontWeight,
      baseStyle: baseStyle,
    );
  }

  /// ะัะพะฒะตััะตั, ัะฒะปัะตััั ะปะธ ZWJ ะฟะพัะปะตะดะพะฒะฐัะตะปัะฝะพััั ะฒะตัะพััะฝะพ ะฝะตะฟะพะดะดะตัะถะธะฒะฐะตะผะพะน
  static bool _isLikelyUnsupported(String emoji) {
    // ะัะพะฒะตััะตะผ ะฝะฐ ะฝะฐะปะธัะธะต ะฝะพะฒัั Unicode ัะธะผะฒะพะปะพะฒ (ัััะตะปะบะธ ะฝะฐะฟัะฐะฒะปะตะฝะธั)
    final runes = emoji.runes.toList();
    
    for (final rune in runes) {
      // ะกััะตะปะบะธ ะฝะฐะฟัะฐะฒะปะตะฝะธั, ะบะพัะพััะต ะผะพะณัั ะฝะต ะฟะพะดะดะตัะถะธะฒะฐัััั
      if (rune == 0x2194 || // โ
          rune == 0x2195 || // โ
          rune == 0x2196 || // โ
          rune == 0x2197 || // โ
          rune == 0x2198 || // โ
          rune == 0x2199) { // โ
        return true;
      }
    }
    
    return false;
  }

  /// ะกะฟะธัะพะบ ะฟะพะฟัะปััะฝัั ZWJ ัะผะพะดะทะธ ะดะปั ะดะตะผะพะฝัััะฐัะธะธ
  static const List<String> zjwEmojiExamples = [
    '๐จโ๐ฉโ๐งโ๐ฆ',      // ัะตะผัั: ะผัะถัะธะฝะฐ, ะถะตะฝัะธะฝะฐ, ะดะตะฒะพัะบะฐ, ะผะฐะปััะธะบ
    '๐จโ๐ฉโ๐ง',        // ัะตะผัั: ะผัะถัะธะฝะฐ, ะถะตะฝัะธะฝะฐ, ะดะตะฒะพัะบะฐ
    '๐จโ๐ฉโ๐ฆ',        // ัะตะผัั: ะผัะถัะธะฝะฐ, ะถะตะฝัะธะฝะฐ, ะผะฐะปััะธะบ
    '๐ฉโ๐ฉโ๐งโ๐ฆ',      // ัะตะผัั: ะถะตะฝัะธะฝะฐ, ะถะตะฝัะธะฝะฐ, ะดะตะฒะพัะบะฐ, ะผะฐะปััะธะบ
    '๐จโ๐จโ๐งโ๐ฆ',      // ัะตะผัั: ะผัะถัะธะฝะฐ, ะผัะถัะธะฝะฐ, ะดะตะฒะพัะบะฐ, ะผะฐะปััะธะบ
    '๐จโ๐ฉโ๐งโ๐ง',      // ัะตะผัั: ะผัะถัะธะฝะฐ, ะถะตะฝัะธะฝะฐ, ะดะตะฒะพัะบะฐ, ะดะตะฒะพัะบะฐ
    '๐จโ๐ฉโ๐ฆโ๐ฆ',      // ัะตะผัั: ะผัะถัะธะฝะฐ, ะถะตะฝัะธะฝะฐ, ะผะฐะปััะธะบ, ะผะฐะปััะธะบ
    '๐จ๐ปโ๐ป',        // ะผัะถัะธะฝะฐ-ัะตัะฝะพะปะพะณ: ัะฒะตัะปัะน ัะพะฝ ะบะพะถะธ
    '๐ฉ๐พโ๐',        // ะถะตะฝัะธะฝะฐ-ะบะพัะผะพะฝะฐะฒั: ัะตะผะฝะพ-ััะตะดะฝะธะน ัะพะฝ ะบะพะถะธ
    '๐งโ๐ป',          // ัะตัะฝะพะปะพะณ
    '๐งโ๐',          // ะบะพัะผะพะฝะฐะฒั
    '๐จโโ๏ธ',          // ะผัะถัะธะฝะฐ-ะผะตะดัะฐะฑะพัะฝะธะบ
    '๐ฉโโ๏ธ',          // ะถะตะฝัะธะฝะฐ-ะผะตะดัะฐะฑะพัะฝะธะบ
    '๐จโ๐ซ',          // ะผัะถัะธะฝะฐ-ััะธัะตะปั
    '๐ฉโ๐ซ',          // ะถะตะฝัะธะฝะฐ-ััะธัะตะปั
    '๐จโ๐',          // ะผัะถัะธะฝะฐ-ะฟะพะถะฐัะฝัะน
    '๐ฉโ๐',          // ะถะตะฝัะธะฝะฐ-ะฟะพะถะฐัะฝัะน
    '๐ณ๏ธโ๐',          // ัะฐะดัะถะฝัะน ัะปะฐะณ
    '๐ณ๏ธโโง๏ธ',          // ััะฐะฝัะณะตะฝะดะตัะฝัะน ัะปะฐะณ
    '๐ซฑ๐ปโ๐ซฒ๐พ',       // ััะบะพะฟะพะถะฐัะธะต: ัะฒะตัะปัะน ัะพะฝ ะบะพะถะธ, ัะตะผะฝะพ-ััะตะดะฝะธะน ัะพะฝ ะบะพะถะธ
    'โค๏ธโ๐ฅ',          // ัะตัะดัะต ะฒ ะพะณะฝะต
    'โค๏ธโ๐ฉน',          // ะทะฐะถะธะฒะฐััะตะต ัะตัะดัะต
    '๐ฎโ๐จ',          // ะฒัะดััะฐััะตะต ะปะธัะพ
    '๐ตโ๐ซ',          // ะปะธัะพ ั ะบัะตััะธะบะฐะผะธ ะฒ ะณะปะฐะทะฐั
    '๐โโ๏ธ',          // ะบะธะฒะฐััะตะต ะปะธัะพ (ะฒะปะตะฒะพ-ะฒะฟัะฐะฒะพ)
    '๐โโ๏ธ',          // ะบะธะฒะฐััะตะต ะปะธัะพ (ะฒะฒะตัั-ะฒะฝะธะท)
  ];

  /// ะะพะปััะฐะตั ัะปััะฐะนะฝัะน ZWJ ัะผะพะดะทะธ
  static String getRandomZjwEmoji() {
    final now = DateTime.now().millisecondsSinceEpoch;
    final index = (now / 1000).round() % zjwEmojiExamples.length;
    return zjwEmojiExamples[index];
  }
}
