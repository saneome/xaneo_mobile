import 'package:flutter/services.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö Emoji —à—Ä–∏—Ñ—Ç–æ–≤
class EmojiLoaderService {
  static bool _isInitialized = false;
  static Uint8List? _cachedFontData;
  
  /// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π Emoji —à—Ä–∏—Ñ—Ç –≤ –ø–∞–º—è—Ç—å
  static Future<void> preloadCustomEmojiFont() async {
    if (_isInitialized) return;
    
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç —ç–º–æ–¥–∑–∏ –≤ –ø–∞–º—è—Ç—å
      final ByteData fontData = await rootBundle.load('assets/fonts/appleemojis.ttf');
      _cachedFontData = fontData.buffer.asUint8List();
      
      // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º—ã
      await _registerFont();
      
      _isInitialized = true;
      print('‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–π Emoji —à—Ä–∏—Ñ—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω');
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ Emoji —à—Ä–∏—Ñ—Ç–∞: $e');
    }
  }
  
  /// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —à—Ä–∏—Ñ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ Flutter
  static Future<void> _registerFont() async {
    if (_cachedFontData == null) return;
    
    try {
      // –°–æ–∑–¥–∞–µ–º FontLoader –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      final fontLoader = FontLoader('CustomEmojis');
      fontLoader.addFont(Future.value(_cachedFontData!.buffer.asByteData()));
      await fontLoader.load();
      
      print('üìù –ö–∞—Å—Ç–æ–º–Ω—ã–π Emoji —à—Ä–∏—Ñ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ FontLoader');
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —à—Ä–∏—Ñ—Ç–∞: $e');
    }
  }
  
  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —à—Ä–∏—Ñ—Ç
  static bool get isLoaded => _isInitialized && _cachedFontData != null;
  
  /// –ü–æ–ª—É—á–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞ –≤ –±–∞–π—Ç–∞—Ö
  static int get fontSizeBytes => _cachedFontData?.length ?? 0;
  
  /// –û—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã —à—Ä–∏—Ñ—Ç–∞ –∏–∑ –ø–∞–º—è—Ç–∏
  static void dispose() {
    _cachedFontData = null;
    _isInitialized = false;
    print('üóëÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–π Emoji —à—Ä–∏—Ñ—Ç –≤—ã–≥—Ä—É–∂–µ–Ω –∏–∑ –ø–∞–º—è—Ç–∏');
  }
  
  /// –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —à—Ä–∏—Ñ—Ç–∞
  static Map<String, dynamic> getStatus() {
    return {
      'isLoaded': _isInitialized,
      'fontSizeKB': (fontSizeBytes / 1024).toStringAsFixed(2),
      'cacheStatus': _cachedFontData != null ? 'cached' : 'not_cached',
    };
  }
}
